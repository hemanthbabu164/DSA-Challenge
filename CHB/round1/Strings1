//1. Check if One String is a Rotation of Another

//M1: plain Brute, Not accepted

#include<bits/stdc++.h>
string rotateString(string str, int n){
    string str1;
    str1+=str[n-1];
    for(int i=0;i<n-1;i++){
        str1+=str[i];
    }
    return str1;
}
int isCyclicRotation(string &p, string &q) 
{
    int n1=p.length();
    int n2=q.length();
    if(n1!=n2 || p==q){
        return 0;
    }
    for(int i=1;i<n1;i++){
        p=rotateString(p, n1);
        if(q==p){
            return 1;
        }
    }
    return 0;
    
}

//M2:Still not accepted:

int isCyclicRotation(string &p, string &q) 
{
    int n1=p.length();
    int n2=q.length();
    if(n1!=n2 || p==q){
        return 0;
    }
    string str=p+p;
    for(int i=0;i<n1+n2;i++){
        if(str[i]==q[0]){
            bool key=true;
            for(int j=0;j<n1;j++){
                if(str[i+j]!=q[j]){
                    key=false;
                    break;
                }
            }
            if(key){
                return 1;
            }
        }
    }
    return 0;
    
}

//M3: Here Same as M2 butfor string matching, i am using KMP

