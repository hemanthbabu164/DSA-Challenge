Dijkstra's Algorithm:
Not applicable to graphs with -ve weight cycle else it will fall in infinite loop
1. With Priority Queue -> MinHeap: TE: ElogV
```
vector<int> dijkstra(vector<vector<int>> adj[], int V, int src){
	priority_queue<pair<int,int>,vector<pair<int,int>>, greater<pair<int,int>>> pq;

	vector<int> dist(V);
	for(int i=0;i<V;i++) dist[i]=1e9;

	dist[src]=0;
	pq.push({0,src});

	while(!pq.empty()){
		int dis=pq.top().first;
		int node=pq.top().second;
		pq.pop();
		
		for(auto neighbour:adj[node]){
			int wt = neighbour[1];
			int neighnode = neighbour[2];
			
			int neighdis = dis+wt;
			if(neighdis<dist[neighnode]){
				pq.push(neighdis,neighnode);
				dist[neighnode]=neighdis;
			}
		}
	}

	return dist;
}
```