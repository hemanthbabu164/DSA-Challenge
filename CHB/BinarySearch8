//1.Aggressive Cows

bool isPossible(vector<int> &stalls, int k, int minD){
    int d1=stalls[0];
    int count=1;
    for(int i=1;i<stalls.size();i++){
        if(stalls[i]-d1 >= minD){
            count++;
            d1=stalls[i];
        }
    }
    return count>=k;
}
int aggressiveCows(vector<int> &stalls, int k)
{
    int n=stalls.size();
    sort(stalls.begin(),stalls.end());
    int ans=0;
    int low=1;
    int high=stalls[n-1]-stalls[0];
    //In Binary Search Low points to possible answer and high to impossible answer int he beginning
    //They both travel to opposite polarity
    //Here in this question we dont have to take an extra variable, we can just use high for it
    while(low<=high){
        int mid=low+(high-low)/2;
        if(isPossible(stalls,k,mid)){
            ans=mid;
            low=mid+1;
        }
        else{
            high=mid-1;
        }
    }
    return ans;//or high
}

