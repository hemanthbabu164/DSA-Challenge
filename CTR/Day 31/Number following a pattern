Q)Given a pattern containing only I's and D's. I for increasing and D for decreasing.
  Devise an algorithm to print the minimum number following that pattern. Digits from 1-9 and digits can't repeat.

Example 1:

Input:
D
Output:
21
Explanation:
D is meant for decreasing, so we choose the minimum number among all possible numbers like 21,31,54,87,etc.


//code

  //{ Driver Code Starts
#include<bits/stdc++.h> 
using namespace std; 

// } Driver Code Ends
class Solution{   
public:
    string printMinNumberForPattern(string S){
        // code here 
        
         string ans="";

        for(int i=0;i<=S.size();i++)
        {
            ans.push_back('1'+ i);
        }
        for(int i=0;i<=S.size();i++)
        {
            if(S[i]=='D')
            {
              auto beg=ans.begin()+i;
              while(i<S.size() and S[i]=='D')
              {
                  i++;
              }
              auto end=ans.begin()+i+1;
             reverse(beg,end);
            } 
        }
        return ans;

    }
    
};


//{ Driver Code Starts.
int main() 
{ 
    int t;
    cin>>t;
    while(t--)
    {
        string S;
        cin >> S;
        Solution ob;
        cout << ob.printMinNumberForPattern(S) << endl;
    }
    return 0; 
} 

// } Driver Code Ends
