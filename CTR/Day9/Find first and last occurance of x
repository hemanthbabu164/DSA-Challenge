Q)Given a sorted array arr containing n elements with possibly duplicate is to find indexes of first elements, 
the task is to find the first and last occurrences of an element x in the given array.
Note: If the number x is not found in the array then return both the indices as -1.

// code
//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends

class Solution
{
    public:
      vector<int> find(int arr[], int n , int x )
{
   int low=0;
   int high=n-1;
   int mid;
   int lb=-1;
   int ub=-1;
   
   while(low<=high)
   {
       mid=(low+high)/2;
       if(arr[mid]==x)
       {
           high=mid-1;
           lb=mid;
       }
       else if(arr[mid]>x)
       {
           high=mid-1;
       }
       else
       {
           low=mid+1;
       }
   }
   
   
   low=0;
   high=n-1;
    mid=(low+high)/2;
    
    while(low<=high)
    {
        mid=(low+high)/2;
        if(arr[mid]==x)
        {
            ub=mid;
           low=mid+1;
        }
        else if(arr[mid]<x)
        {
            low=mid+1;
        }
        else
        {
            high=mid-1;
        }
    }
   
   return {lb,ub};
   
}
};



//{ Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n,x;
        cin>>n>>x;
        int arr[n],i;
        for(i=0;i<n;i++)
        cin>>arr[i];
        vector<int> ans;
        Solution ob;
        ans=ob.find(arr,n,x);
        cout<<ans[0]<<" "<<ans[1]<<endl;
    }
    return 0;
}



// } Driver Code Ends
