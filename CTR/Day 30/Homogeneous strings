Given a string s, return the number of homogenous substrings of s. Since the answer may be too large, return it modulo 109 + 7.

A string is homogenous if all the characters of the string are the same.

A substring is a contiguous sequence of characters within a string.

 

Example 1:

Input: s = "abbcccaa"
Output: 13
Explanation: The homogenous substrings are listed as below:
"a"   appears 3 times.
"aa"  appears 1 time.
"b"   appears 2 times.
"bb"  appears 1 time.
"c"   appears 3 times.
"cc"  appears 2 times.
"ccc" appears 1 time.
3 + 1 + 2 + 1 + 3 + 2 + 1 = 13.


//code

class Solution {
public:
    int countHomogenous(string s) {
        int count=0;

        for(int i=1;i<s.length();i++)
        {
            bool flag=true;
            int k=0;
            while(flag)
            {
                if(s[i]==s[i-1])
                {
                    k++;
                    count=(count+k+1)%1000000007;
                    i+=1;
                }
                else
                {
                    flag=false;
                } 
            }
            
            if(k!=0)
            {
                i--;
            }
            else
            {
                count=(count+1)%1000000007;
            }
        }

        return (count+1)%1000000007;
    }
};
