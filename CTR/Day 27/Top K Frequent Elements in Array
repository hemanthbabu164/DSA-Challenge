Q)Given a non-empty array nums[] of integers of length N, find the top k elements which have the highest frequency in the array. 
If two numbers have same frequencies, then the larger number should be given more preference.

Example 1:

Input:
N = 6
nums = {1,1,1,2,2,3}
k = 2
Output: {1, 2}

//code

//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  public:
    vector<int> topK(vector<int>& nums, int k) {
        // Code here
        
       unordered_map<int , int> m;
        for(int i = 0 ; i <nums.size();i++)
        {
            ++m[nums[i]];
        }
        vector<int>ans;
        priority_queue<pair<int ,int>>p;
        for(auto it: m)
        {
            p.push({it.second,it.first});   // queueing based on first value
        }
        for(int i = 0 ; i < k;i++)
        {
            ans.push_back(p.top().second);
            p.pop();
        }
        return ans;
    }
};


//{ Driver Code Starts.
int main() {
    int tc;
    cin >> tc;
    while (tc--) {
        int n;
        cin >> n;
        vector<int> nums(n);
        for (auto &i : nums) cin >> i;
        int k;
        cin >> k;
        Solution obj;
        vector<int> ans = obj.topK(nums, k);
        for (auto i : ans) cout << i << " ";
        cout << "\n";
    }
    return 0;
}
// } Driver Code Ends
