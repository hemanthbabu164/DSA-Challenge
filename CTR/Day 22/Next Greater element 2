Q)Given a circular integer array arr of size N (i.e ., the next element of arr [N-1] is arr[0] ),
return the next greater number for every element in arr.
The next greater element of a number x is the first greater number to its traversing order next in the array, 
which means you could search circularly to find its next greater number. 
If it doesn't exist, return -1 for this number.
 

Example 1:

Input:
N = 3
arr[ ] = {1, 2, 1}
Output: {2, -1, 2}
Explanation: The first 1's next greater number is 2:
The number 2 can't find next greater number.
The second 1's next greater number needs to search circularly, which is also 2.

//code

//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    vector<int> nextGreaterElement(int N, vector<int>& arr) {
        // code here
        vector<int> res(N,-1);
        
        for(int i=N-1;i>=0;i--)
        {
            int vis=i;
            vis=(vis+1)%N;
            while(vis!=i)
            {
                if(arr[vis]>arr[i])
                {
                    res[i]=arr[vis];
                    break;
                }
                vis=(vis+1)%N;
            }
        }
        
        return res;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int N;
        cin >> N;

        vector<int> arr(N);
        for (int i = 0; i < N; i++) cin >> arr[i];

        Solution obj;
        vector<int> ans = obj.nextGreaterElement(N, arr);
        for (auto &it : ans) {
            cout << it << ' ';
        }
        cout << endl;
    }
    return 0;
}
// } Driver Code Ends
