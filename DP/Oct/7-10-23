// substitue each node with it's nearest prime number in linked list

//{ Driver Code Starts
//Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

class Node{
public:
    int val;
    Node *next;
    Node(int num){
        val=num;
        next=NULL;
    }
};


// } Driver Code Ends
//User function Template for C++

/*

class Node{
public:
    int val;
    Node *next;
    Node(int num){
        val=num;
        next=NULL;
    }
};

*/

class Solution{
public:

    void isPrime(int n,bool &cal)
    {
        
        for(int i=2;i*i<=n;i++)
        {
            if(n%i==0)
            {
                //cal=true;
                return;
            }
        }
        cal=true;
    }
 
    int nearestPrime(int n)
    {
        if(n==1)
            return 2;
        bool calculated=false;
        int t1=n+1;
        while(!calculated&&t1>=1) 
        {
            //d1++;
            t1--;
            isPrime(t1,calculated);
        }
        if(!calculated)
            return n;
        if(calculated)
        {
           int t2=n-1;calculated=false;
            while(!calculated&&t2<=12000) 
            {
                  
                t2++;
                isPrime(t2,calculated);
            }
            
            if(abs(n-t1)<abs(n-t2))
                return t1;
            else if(abs(n-t1)>abs(n-t2))
                return t2;
            else{
                return min(t1,t2);
            } 
        }
    }
    Node *primeList(Node *head){
        Node* cur=head;
        while(cur!=NULL){
            cur->val=nearestPrime(cur->val);
            cur=cur->next;
        }
        return head;
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        Node *head,*tail;
        int num;
        cin>>num;
        head=tail=new Node(num);
        for(int i=0;i<n-1;i++){
            int num;
            cin>>num;
            tail->next=new Node(num);
            tail=tail->next;
        }
        Solution ob;
        Node *temp=ob.primeList(head);
        while(temp!=NULL){
            cout<<temp->val<<" ";
            temp=temp->next;
        }
        cout<<endl;
    }
    return 0;
}
// } Driver Code Ends



