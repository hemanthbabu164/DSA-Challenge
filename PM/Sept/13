1.	Check from 2 to n/2

def is_prime(num):
    if num>1:
        for i in range(2,int(num/2)+1):
            if(num%i)==0:
                return False
        return True
    else:
        return False
    
n=int(input("Enter a number: "))
print(is_prime(n))

Time Complexity: O(n)
Space Complexity: O(1)


2. Check from n to sqrt(2)

def is_prime(num):
    if num>1:
        for i in range(2,int(num**0.5)+1):
            if(num%i)==0:
                return False
        return True
    else:
        return False
    
n=int(input("Enter a number: "))
print(is_prime(n))

TIME: O(sqrt(n))
SPACE: O(1)

3. sympy module

from sympy import *

n=int(input("Enter a number: "))
print(isprime(n))

NOTE: module neededTime Complexity: O(n)
Space Complexity:Â O(1)

4. Using Recursion

from math import sqrt
def is_prime(num,cap):
    if cap==1:
        return True
    if num%cap==0:
        return False
    if is_prime(num,cap-1)==False:
        return False
    return True

num=int(input("Enter a number: "))
cap=int(sqrt(num)+1)
print(is_prime(num,cap))

TIME: O(sqrt(n))
SPACE:O(sqrt(n))


